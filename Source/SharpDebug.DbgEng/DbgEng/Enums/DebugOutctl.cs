using System;

namespace DbgEng
{
    /// <summary>
    /// The DEBUG_OUTCTL_XXX constants are used for output control.
    /// The constants form a bit field that specifies the current policy of where to send output.
    /// The bit field is divided into two sections.
    /// </summary>
    [Flags]
    public enum DebugOutctl
    {
        /// <summary>
        /// Output generated by methods called by this client will be sent only to this client's output callbacks.
        /// <note>Maps to DEBUG_OUTCTL_THIS_CLIENT.</note>
        /// </summary>
        ThisClient,

        /// <summary>
        /// Output will be sent to all clients.
        /// <note>Maps to DEBUG_OUTCTL_ALL_CLIENTS.</note>
        /// </summary>
        AllClients,

        /// <summary>
        /// Output will be sent to all clients (except to the client that generated the output).
        /// <note>Maps to DEBUG_OUTCTL_ALL_OTHER_CLIENTS.</note>
        /// </summary>
        AllOtherClients,

        /// <summary>
        /// Output will be discarded immediately and will not be logged or sent to callbacks.
        /// <note>Maps to DEBUG_OUTCTL_IGNORE.</note>
        /// </summary>
        Ignore,

        /// <summary>
        /// Output will be logged but not sent to callbacks.
        /// <note>Maps to DEBUG_OUTCTL_LOG_ONLY.</note>
        /// </summary>
        LogOnly,

        /// <summary>
        /// Lower section used as send mask. Only one value can be set in lower bits.
        /// <note>Maps to DEBUG_OUTCTL_SEND_MASK.</note>
        /// </summary>
        SendMask = 7,

        /// <summary>
        /// Do not put output from this client in the global log file.
        /// <note>Maps to DEBUG_OUTCTL_NOT_LOGGED.</note>
        /// </summary>
        NotLogged = 8,

        /// <summary>
        /// Sends output to clients regardless of whether the client's output mask allows it.
        /// <note>Maps to DEBUG_OUTCTL_OVERRIDE_MASK.</note>
        /// </summary>
        OverrideMask = 16,

        /// <summary>
        /// For output that supports Debugger Markup Language (DML), sends the output in DML format.
        /// <note>Maps to DEBUG_OUTCTL_DML.</note>
        /// </summary>
        Dml = 32,

        /// <summary>
        /// Sets the new output control to the same value as the current output control and specifies that the output will be in DML format.
        /// <note>Maps to DEBUG_OUTCTL_AMBIENT_DML.</note>
        /// </summary>
        AmbientDml = -2,

        /// <summary>
        /// Sets the new output control to the same value as the current output control and specifies that the output will be in text format.
        /// <note>Maps to DEBUG_OUTCTL_AMBIENT_TEXT.</note>
        /// </summary>
        AmbientText = -1,

        /// <summary>
        /// Same as AmbientText
        /// <note>Maps to DEBUG_OUTCTL_AMBIENT.</note>
        /// </summary>
        Ambient = AmbientText,
    }
}
